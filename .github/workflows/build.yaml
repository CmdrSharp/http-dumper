name: Build Docker image

on:
  pull_request:
    paths:
      - 'src/*.rs'
      - 'Cargo.toml'
      - 'Cargo.lock'
    branches: ['main']
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      max-parallel: 1
      matrix:
        include:
          - target: "x86_64-unknown-linux-gnu"
            suffix: ""
            binary_name: "http_dumper"
            runner: [ubuntu-latest]
            requires_tools: true
    steps:
    - uses: actions/checkout@v3
      with:
        ref: "${{ github.head_ref || github.ref_name }}"

    - name: Login to Quay.io
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_ROBOT_TOKEN }}

    - name: Install build dependencies
      if: matrix.requires_tools
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
          build-essential \
          gcc

    - name: Install latest Rust Stable
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        target: ${{ matrix.target }}
      
    - name: Build the binary
      uses: ClementTsang/cargo-action@v0.0.6
      with:
        use-cross: true
        command: build
        args: --release --target ${{ matrix.target }}

    - name: Get short SHA of commit
      run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

    - name: Build the Docker Image
      run: |
        DOCKER_BUILDKIT=1 docker build --no-cache \
          -t quay.io/duk4s/httpdumper:${SHORT_SHA} \
          -t quay.io/duk4s/httpdumper:latest \
          .

    - name: Push the Docker Image
      if: "${{ github.event.inputs.latest == 'yes' }}"
      run: |
        docker push quay.io/duk4s/httpdumper:${SHORT_SHA}
        docker push quay.io/duk4s/httpdumper:latest

